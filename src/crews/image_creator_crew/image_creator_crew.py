from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task, llm
from langchain_openai import ChatOpenAI
from pydantic import BaseModel, Field

from tools.image_generator_tool import ImageGeneratorTool

image_generator_tool = ImageGeneratorTool(name="Image Generator",
                                          description="Generates images based on a given prompt using DALL-E 3.")


class SceneImage(BaseModel):
    prompt: str = Field(description="A prompt for text to image models that can be used to generate an image.")
    image_url: str = Field(description="Url to the image generated by the tool")


@CrewBase
class ImageCreatorCrew:
    """Image Creator Crew"""

    agents_config = "config/agents.yaml"
    tasks_config = "config/tasks.yaml"

    @llm
    def llm_model(self):
        return ChatOpenAI(model="gpt-4o")

    @agent
    def visual_artist_agent(self) -> Agent:
        return Agent(
            config=self.agents_config['visual_artist_agent'],
            tools=[image_generator_tool],
            verbose=True
        )

    @task
    def illustration(self) -> Task:
        return Task(
            config=self.tasks_config['illustration'],
            output_pydantic=SceneImage,
            output_file='report.md'
        )

    @crew
    def crew(self) -> Crew:
        """Creates the Research Crew"""
        return Crew(
            agents=self.agents,
            tasks=self.tasks,
            process=Process.sequential,
            verbose=True,
        )
